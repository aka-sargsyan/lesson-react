{"version":3,"sources":["componet/assets/profile/avatarka.jpg","componet/navbar/NavbarStyle.module.css","componet/dialogs/DialogsStyle.module.css","componet/profile/ProfileStyle.module.css","componet/profile/profileInformation/ProfileInformationStyle.module.css","componet/profile/my_posts/post/PostStyle.module.css","componet/dialogs/message/MessageStyle.module.css","componet/header/HeaderStyle.module.css","componet/assets/header/logo.png","componet/assets/profile/profile.jpg","componet/profile/my_posts/MyPostsStyle.module.css","componet/assets/dialog/name1.png","componet/assets/dialog/name2.png","componet/assets/dialog/name3.png","componet/assets/dialog/name4.png","componet/assets/dialog/name5.png","componet/assets/dialog/name6.png","componet/header/Header.jsx","componet/navbar/Navbar.jsx","componet/profile/profileInformation/ProfileInformation.jsx","componet/profile/my_posts/post/Post.jsx","componet/profile/my_posts/MyPosts.jsx","componet/redux/profile-reduser.js","componet/profile/my_posts/MyPostsContainer.jsx","componet/profile/Profile.jsx","componet/profile/ProfileContainer.jsx","componet/redux/dialogs-reduser.js","componet/dialogs/dialog_item/DialogItem.jsx","componet/dialogs/message/Message.jsx","componet/dialogs/Dialogs.jsx","componet/dialogs/DialogsContainer.jsx","App.js","serviceWorker.js","componet/redux/redux-store.js","index.js"],"names":["module","exports","Header","className","styleCss","header","to","src","logo","alt","width","navBarMenu","id","name","Navbar","map","element","key","activeClassName","activeClass","visitedClass","ProfileInformation","profileInformation","widthImg","profileImg","Post","props","p16","avatarka","height","post","likeCount","MyPosts","posts","text","newPostText","postsElement","newPostElement","React","createRef","myPosts","ref","onChange","current","value","onPostCheang","cols","rows","onClick","onAddPost","initialState","addPost","state","stateCopy","length","push","updateNewPostText","profileReducer","action","type","MyPostsContainer","connect","profilePage","dispatch","addPostCreator","updateNewPostTextCreator","Profile","app_wraper_content","ProfileContainer","newMessageText","dialogs","name1","name2","name3","name4","name5","name6","messages","userId","message","updateNewMessageText","addMessage","dialogReduser","DialogItem","path","Message","textAlignRight","textAlignLeft","Dialogs","dialogsPage","dialogsElement","dialog","messagesElement","dialogItem","placeholder","currentTarget","onMessageCheang","onSendMessage","DialogsContainer","dialogPage","addMessageCreator","updateNewMessageTextCreator","App","ProfileRender","exact","render","Boolean","window","location","hostname","match","redusers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9db7dea0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatarka.4db376fa.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"NavbarStyle_Navbar__1oSGK\",\"textDecorationNone\":\"NavbarStyle_textDecorationNone__axyB9\",\"activeClass\":\"NavbarStyle_activeClass__3YL-g\",\"visitedClass\":\"NavbarStyle_visitedClass__27zdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsStyle_dialogs__38M-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widthImg\":\"ProfileStyle_widthImg__2_zMQ\",\"p16\":\"ProfileStyle_p16__39Rh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widthImg\":\"ProfileInformationStyle_widthImg__1A0CT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p16\":\"PostStyle_p16__3IQIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAlignLeft\":\"MessageStyle_textAlignLeft__1QG4K\",\"textAlignRight\":\"MessageStyle_textAlignRight__x8RKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderStyle_header__1Gr8X\"};","module.exports = __webpack_public_path__ + \"static/media/logo.80c19cf7.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.01723588.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p16\":\"MyPostsStyle_p16__cLOVn\"};","module.exports = __webpack_public_path__ + \"static/media/name1.6d5980cf.png\";","module.exports = __webpack_public_path__ + \"static/media/name2.3be9eee2.png\";","module.exports = __webpack_public_path__ + \"static/media/name3.28d0feff.png\";","module.exports = __webpack_public_path__ + \"static/media/name4.4f701104.png\";","module.exports = __webpack_public_path__ + \"static/media/name5.1d78c416.png\";","module.exports = __webpack_public_path__ + \"static/media/name6.c1a07ddb.png\";","import React from 'react';\nimport styleCss from './HeaderStyle.module.css'\nimport logo from '../assets/header/logo.png'\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className={styleCss.header}>\n      <NavLink to=\"/\">\n      <img src={logo} alt=\"\" width=\"70\"/>    \n      </NavLink>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport styleCss from './NavbarStyle.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst navBarMenu = [\n  { id: 1, to: 'profile', name: 'Profile' },\n  { id: 2, to: 'dialogs', name: 'Dialogs' },\n  { id: 3, to: 'news', name: 'News' },\n  { id: 4, to: 'music', name: 'Music' },\n  { id: 5, to: 'settings', name: 'Settings' },\n  { id: 6, to: 'users', name: 'Users' }\n]\n\nconst Navbar = () => {\n  return (\n    <div className={styleCss.Navbar}>\n      <div>\n        {navBarMenu.map((element) => (\n          <div key={element.id}>\n            <NavLink to={`/${element.to}`} activeClassName={styleCss.activeClass} className={`${styleCss.visitedClass} textDecorationNone`}>{element.name}</NavLink>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n\n","import React from 'react';\nimport styleCss from './ProfileInformationStyle.module.css';\nimport profileImg from '../../assets/profile/profile.jpg';\n\nconst ProfileInformation = () => {\n  return (\n    <div className={styleCss.profileInformation}>\n      <div className={styleCss.widthImg}>\n        <img src={profileImg} alt=\"\" />\n      </div>\n      <div>\n        <p>ava+dicription</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInformation;","import React from 'react';\nimport styleCss from './PostStyle.module.css';\n\n\nconst Post = (props) => {\n  return (\n    <div className={styleCss.Post} key={props.id}>\n      <div className={styleCss.p16}>\n        <img src={props.avatarka} alt=\"\" width=\"60\" height=\"60\" />\n        <span>{props.post}</span>\n        <div>\n          <span>Like</span>\n          <span>{props.likeCount}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport styleCss from './MyPostsStyle.module.css';\nimport Post from './post/Post';\n\nconst MyPosts = (props) => {\n\n  let posts = props.posts;\n  let text = props.newPostText;\n  let postsElement = posts.map(post => <Post avatarka={post.avatarka} post={post.post} likeCount={post.likeCount} key={post.id} />);\n  let newPostElement = React.createRef();\n\n  let addPost = () => {\n    let text = newPostElement.current.value;\n    props.onAddPost(text);\n  }\n\n  let onPostCheang = () => {\n    let text = newPostElement.current.value;\n    props.onPostCheang(text)\n  }\n\n  return (\n    <div className={styleCss.myPosts}>\n      <div>\n        <p className=\"m0\">My posts</p>\n        <textarea ref={newPostElement} onChange={onPostCheang} value={text} name=\"\" cols=\"30\" rows=\"1\"></textarea>\n        <div>\n          <button onClick={addPost}>Add post</button>\n        </div>\n      </div>\n      {postsElement}\n    </div>\n  )\n}\n\nexport default MyPosts;","import avatarka from '../assets/profile/avatarka.jpg';\n\n\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet initialState = {\n  newPostText: \"Coins\",\n  posts: [\n    { id: 1, avatarka: avatarka, post: \"I'am ak and you\", likeCount: 3 },\n    { id: 2, avatarka: avatarka, post: \"How are you\", likeCount: 2 },\n    { id: 3, avatarka: avatarka, post: \"Do you happy\", likeCount: 5 },\n    { id: 4, avatarka: avatarka, post: \"I'm GOOD...\", likeCount: 6 },\n  ]\n};\n\nlet addPost = (state, text) => {\n  let stateCopy = { ...state };\n  stateCopy.posts = [...state.posts];\n  let id = stateCopy.posts.length + 1\n  stateCopy.posts.push({ id, avatarka, post: text, likeCount: 0 });\n  stateCopy.newPostText = \"\";\n  return stateCopy\n}\n\nlet updateNewPostText = (state, text) => {\n\n  return { ...state, newPostText: text }\n}\n\nexport let addPostCreator = (text) => ({ type: ADD_POST, text });\nexport let updateNewPostTextCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, text });\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NEW_POST_TEXT:\n      return updateNewPostText(state, action.text);\n\n    case ADD_POST: \n     return addPost(state, action.text);\n\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer\n","import MyPosts from './MyPosts';\nimport { addPostCreator, updateNewPostTextCreator } from '../../redux/profile-reduser';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return { posts: state.profilePage.posts, newPostText: state.profilePage.newPostText }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    onAddPost: (text) => dispatch(addPostCreator(text)),\n    onPostCheang: (text) => dispatch(updateNewPostTextCreator(text))\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n\n","import React from 'react';\nimport styleCss from './ProfileStyle.module.css';\nimport ProfileInformation from './profileInformation/ProfileInformation';\nimport MyPostsContainer from './my_posts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n  return (\n    <div className={styleCss.Profile}>\n      <div className={styleCss.app_wraper_content}>\n        <ProfileInformation />\n        <MyPostsContainer />\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\n\n\nconst ProfileContainer = (props) => {\n\n  return (\n    <Profile />\n  )\n}\n\nexport default ProfileContainer;","import name1 from '../assets/dialog/name1.png';\nimport name2 from '../assets/dialog/name2.png';\nimport name3 from '../assets/dialog/name3.png';\nimport name4 from '../assets/dialog/name4.png';\nimport name5 from '../assets/dialog/name5.png';\nimport name6 from '../assets/dialog/name6.png';\n\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\n\nlet initialState = {\n  newMessageText: \"\",\n  dialogs: [\n    { id: 1, name: \"name1\", avatarka: name1 },\n    { id: 2, name: \"name2\", avatarka: name2 },\n    { id: 3, name: \"name3\", avatarka: name3 },\n    { id: 4, name: \"name4\", avatarka: name4 },\n    { id: 5, name: \"name5\", avatarka: name5 },\n    { id: 6, name: \"name6\", avatarka: name6 },\n  ],\n  messages: [\n    { id: 1, userId: 777, message: \"hello\" },\n    { id: 2, userId: 445, message: \"how are you\" },\n    { id: 3, userId: 777, message: \"it is ok\" },\n    { id: 4, userId: 445, message: \"Good buy....\" },\n  ],\n}\n\nlet updateNewMessageText = (state, text) => {\n  return { ...state, newMessageText: text }\n}\n\nlet addMessage = (state, text) => {\n  let stateCopy = { ...state };\n  stateCopy.messages = [...state.messages]\n  let id = stateCopy.messages.length + 1;\n  stateCopy.messages.push({ id, userId: 777, message: text });\n  stateCopy.newMessageText = \"\";\n  return stateCopy\n}\n\nexport let updateNewMessageTextCreator = (text) => ({ type: UPDATE_NEW_MESSAGE_TEXT, text });\nexport let addMessageCreator = (text) => ({ type: ADD_MESSAGE, text });\n\nconst dialogReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return updateNewMessageText(state, action.text);;\n\n    case ADD_MESSAGE:\n      return addMessage(state, action.text);;\n\n    default:\n      return state;\n  }\n}\n\nexport default dialogReduser;","import React from 'react';\nimport styleCss from './DialogItemStyle.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n\n  let path = '/dialogs/' + props.id;\n  let name = props.name;\n\n  return (\n    <div>\n      <img src={props.avatarka} alt=\"\" width=\"50\"/>\n      <NavLink to={path} className={`textDecorationNone`}>{name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport styleCss from './MessageStyle.module.css';\n\nconst Message = (props) => {\n\n  return (\n    <div className={props.userId === 777 ? styleCss.textAlignRight : styleCss.textAlignLeft}>\n      <span >{props.message}</span>\n    </div>\n  )\n}\n\nexport default Message;","import React from 'react';\nimport styleCss from './DialogsStyle.module.css';\nimport DialogItem from './dialog_item/DialogItem';\nimport Message from './message/Message';\n\nconst Dialogs = (props) => {\n  \n  let dialogs = props.dialogsPage.dialogs\n  let messages = props.dialogsPage.messages;\n  let dialogsElement = dialogs.map(dialog => <DialogItem id={dialog.id} name={dialog.name} avatarka={dialog.avatarka} key={dialog.id} />);\n  let messagesElement = messages.map(message => <Message id={message.id} message={message.message} userId={message.userId} key={message.id} />);\n  let text = props.dialogsPage.newMessageText;\n\n  let sendMessage = () => {\n    props.onSendMessage(text)\n  }\n\n  let messageCheang = (element) => {\n    let text = element.currentTarget.value;\n    props.onMessageCheang(text)\n  }\n\n  return (\n    <div className={styleCss.dialogs}>\n      <div className={styleCss.dialogItem}>\n        {dialogsElement}\n      </div>\n      <div className={styleCss.messages}>\n        {messagesElement}\n        <div className=\"pt10\">\n          <textarea  placeholder=\"enter youre message\" onChange={messageCheang} value={text} cols=\"30\" rows=\"1\"></textarea>\n          <button onClick={sendMessage}>send message</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs;","import { addMessageCreator, updateNewMessageTextCreator } from '../redux/dialogs-reduser';\nimport {connect} from 'react-redux'\nimport Dialogs from './Dialogs';\n\n\n// const DialogsContainer = (props) => {\n\n//   let onSendMessage = (text) => {\n//     props.store.dispatch(addMessageCreator(text))\n//   }\n\n//   let onMessageCheang = (text) => {\n//     props.store.dispatch(updateNewMessageTextCreator(text))\n//   }\n\n//   return (\n//     < Dialogs dialogsPage={props.store.getState().dialogPage}\n//       // dispatch={props.store.dispatch.bind(props.store)} \n//       onSendMessage={onSendMessage}\n//       onMessageCheang={onMessageCheang} />\n//   )\n// }\n\nlet mapStatetoProps = (state) => {\n  return {\n    dialogsPage: state.dialogPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    onSendMessage: (text) => dispatch(addMessageCreator(text)),\n    onMessageCheang: (text) => dispatch(updateNewMessageTextCreator(text))\n  }\n}\n\nconst DialogsContainer = connect(mapStatetoProps,mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;\n\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './componet/header/Header';\nimport Navbar from './componet/navbar/Navbar';\nimport ProfileContainer from './componet/profile/ProfileContainer';\nimport DialogsContainer from './componet/dialogs/DialogsContainer';\n\nfunction App(props) {\n\n  let DialogsRender = () => <DialogsContainer  />;\n  let ProfileRender = () => <ProfileContainer />\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-wrapper\">\n        <Header />\n        <Navbar />\n        <div className=\"app_wraper_content\">\n          <Route path='/' exact render={ProfileRender} />\n          <Route path='/profile' render={ProfileRender} />\n          <Route path='/dialogs' render={DialogsRender} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore } from \"redux\";\nimport dialogReduser from \"./dialogs-reduser\";\nimport profileReducer from \"./profile-reduser\";\n\nlet redusers = combineReducers({\n  profilePage: profileReducer,\n  dialogPage: dialogReduser\n});\n\nlet store = createStore(redusers);\n\nexport default store;\n\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './componet/redux/redux-store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n// let rerenderEntireTree = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n// }\n\n// rerenderEntireTree();\n\n// store.subscribe(() => {\n//   rerenderEntireTree()\n// }\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}