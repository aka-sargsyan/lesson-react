{"version":3,"sources":["componet/assets/profile/avatarka.jpg","componet/navbar/NavbarStyle.module.css","componet/dialogs/DialogsStyle.module.css","componet/profile/ProfileStyle.module.css","componet/profile/profileInformation/ProfileInformationStyle.module.css","componet/profile/my_posts/post/PostStyle.module.css","componet/dialogs/message/MessageStyle.module.css","componet/header/HeaderStyle.module.css","componet/assets/header/logo.png","componet/assets/profile/profile.jpg","componet/profile/my_posts/MyPostsStyle.module.css","componet/assets/dialog/name1.png","componet/assets/dialog/name2.png","componet/assets/dialog/name3.png","componet/assets/dialog/name4.png","componet/assets/dialog/name5.png","componet/assets/dialog/name6.png","componet/header/Header.jsx","componet/navbar/Navbar.jsx","componet/profile/profileInformation/ProfileInformation.jsx","componet/profile/my_posts/post/Post.jsx","componet/profile/my_posts/MyPosts.jsx","componet/profile/Profile.jsx","componet/dialogs/dialog_item/DialogItem.jsx","componet/dialogs/message/Message.jsx","componet/dialogs/Dialogs.jsx","App.js","serviceWorker.js","componet/redux/state.js","index.js"],"names":["module","exports","Header","className","styleCss","header","to","src","logo","alt","width","navBarMenu","id","name","Navbar","map","element","key","activeClassName","activeClass","visitedClass","ProfileInformation","profileInformation","widthImg","profileImg","Post","props","p16","avatarka","height","post","likeCount","MyPosts","postsElement","posts","myPosts","cols","rows","Profile","app_wraper_content","state","DialogItem","path","console","log","Message","userId","textAlignRight","textAlignLeft","message","Dialogs","dialogs","messages","dialogsElement","dialog","messagesElement","dialogItem","App","ProfileRender","profilePage","exact","render","dialogPage","Boolean","window","location","hostname","match","name1","name2","name3","name4","name5","name6","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.59850d50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatarka.4db376fa.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"NavbarStyle_Navbar__1oSGK\",\"textDecorationNone\":\"NavbarStyle_textDecorationNone__axyB9\",\"activeClass\":\"NavbarStyle_activeClass__3YL-g\",\"visitedClass\":\"NavbarStyle_visitedClass__27zdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsStyle_dialogs__38M-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widthImg\":\"ProfileStyle_widthImg__2_zMQ\",\"p16\":\"ProfileStyle_p16__39Rh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widthImg\":\"ProfileInformationStyle_widthImg__1A0CT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p16\":\"PostStyle_p16__3IQIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAlignLeft\":\"MessageStyle_textAlignLeft__1QG4K\",\"textAlignRight\":\"MessageStyle_textAlignRight__x8RKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderStyle_header__1Gr8X\"};","module.exports = __webpack_public_path__ + \"static/media/logo.80c19cf7.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.01723588.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p16\":\"MyPostsStyle_p16__cLOVn\"};","module.exports = __webpack_public_path__ + \"static/media/name1.6d5980cf.png\";","module.exports = __webpack_public_path__ + \"static/media/name2.3be9eee2.png\";","module.exports = __webpack_public_path__ + \"static/media/name3.28d0feff.png\";","module.exports = __webpack_public_path__ + \"static/media/name4.4f701104.png\";","module.exports = __webpack_public_path__ + \"static/media/name5.1d78c416.png\";","module.exports = __webpack_public_path__ + \"static/media/name6.c1a07ddb.png\";","import React from 'react';\nimport styleCss from './HeaderStyle.module.css'\nimport logo from '../assets/header/logo.png'\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className={styleCss.header}>\n      <NavLink to=\"/\">\n      <img src={logo} alt=\"\" width=\"70\"/>    \n      </NavLink>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport styleCss from './NavbarStyle.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst navBarMenu = [\n  { id: 1, to: 'lesson-react/profile', name: 'Profile' },\n  { id: 2, to: 'dialogs', name: 'Dialogs' },\n  { id: 3, to: 'news', name: 'News' },\n  { id: 4, to: 'music', name: 'Music' },\n  { id: 5, to: 'settings', name: 'Settings' },\n  { id: 6, to: 'users', name: 'Users' }\n]\n\nconst Navbar = () => {\n  return (\n    <div className={styleCss.Navbar}>\n      <div>\n        {navBarMenu.map((element) => (\n          <div key={element.id}>\n            <NavLink to={`/${element.to}`} activeClassName={styleCss.activeClass} className={`${styleCss.visitedClass} textDecorationNone`}>{element.name}</NavLink>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n\n","import React from 'react';\nimport styleCss from './ProfileInformationStyle.module.css';\nimport profileImg from '../../assets/profile/profile.jpg';\n\nconst ProfileInformation = () => {\n  return (\n    <div className={styleCss.profileInformation}>\n      <div className={styleCss.widthImg}>\n        <img src={profileImg} alt=\"\" />\n      </div>\n      <div>\n        <p>ava+dicription</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInformation;","import React from 'react';\nimport styleCss from './PostStyle.module.css';\n\n\nconst Post = (props) => {\n  return (\n    <div className={styleCss.Post}>\n      <div className={styleCss.p16}>\n        <img src={props.avatarka} alt=\"\" width=\"60\" height=\"60\" />\n        <span>{props.post}</span>\n        <div>\n          <span>Like</span>\n          <span>{props.likeCount}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport styleCss from './MyPostsStyle.module.css';\nimport Post from './post/Post';\n\nconst MyPosts = (props) => {\n\n  let posts = props.posts;\n  let postsElement = posts.map(post => <Post avatarka={post.avatarka} post={post.post} likeCount={post.likeCount} />);\n\n  return (\n    <div className={styleCss.myPosts}>\n      <div>\n        <p className=\"m0\">My posts</p>\n        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"1\"></textarea>\n        <div>\n          <button>Add post</button>\n        </div>\n      </div>\n      {postsElement}\n    </div>\n  )\n}\n\nexport default MyPosts;","import React from 'react';\nimport styleCss from './ProfileStyle.module.css';\nimport ProfileInformation from './profileInformation/ProfileInformation';\nimport MyPosts from './my_posts/MyPosts';\n\nconst Profile = (props) => {\n\n  return (\n    <div className={styleCss.Profile}>\n      <div className={styleCss.app_wraper_content}>\n        <ProfileInformation />\n        <MyPosts posts={props.state.posts}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport styleCss from './DialogItemStyle.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n\n  let path = '/dialogs/' + props.id;\n  let name = props.name;\n  console.log(props.avatarka);\n\n  return (\n    <div>\n      <img src={props.avatarka} alt=\"\" width=\"50\"/>\n      <NavLink to={path} className={`textDecorationNone`}>{name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport styleCss from './MessageStyle.module.css';\n\nconst Message = (props) => {\n\n  return (\n    <div className={props.userId === 777 ? styleCss.textAlignRight : styleCss.textAlignLeft}>\n      <span >{props.message}</span>\n    </div>\n  )\n}\n\nexport default Message;","import React from 'react';\nimport styleCss from './DialogsStyle.module.css';\nimport DialogItem from './dialog_item/DialogItem';\nimport Message from './message/Message';\n\nconst Dialogs = (props) => {\n\n  let dialogs = props.state.dialogs\n  let messages = props.state.messages;\n  let dialogsElement = dialogs.map(dialog => <DialogItem id={dialog.id} name={dialog.name} avatarka={dialog.avatarka}/>);\n  let messagesElement = messages.map(message => <Message id={message.id} message={message.message} userId={message.userId}/>);\n\n  return (\n    <div className={styleCss.dialogs}>\n      <div className={styleCss.dialogItem}>\n        {dialogsElement}\n      </div>\n      <div className={styleCss.messages}>\n        {messagesElement}\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './componet/header/Header';\nimport Navbar from './componet/navbar/Navbar';\nimport Profile from './componet/profile/Profile';\nimport Dialogs from './componet/dialogs/Dialogs';\n\nfunction App(props) {\n  let DialogsRender = () => <Dialogs state={props.state.dialogPage} />;\n  let ProfileRender = () => <Profile state={props.state.profilePage} />\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <Navbar />\n          <div className=\"app_wraper_content\">\n            <Route path='/' exact render={ProfileRender} />\n            <Route path='/lesson-react/profile' render={ProfileRender} />\n            <Route path='/dialogs' render={DialogsRender} />\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import avatarka from '../assets/profile/avatarka.jpg';\nimport name1 from '../assets/dialog/name1.png';\nimport name2 from '../assets/dialog/name2.png';\nimport name3 from '../assets/dialog/name3.png';\nimport name4 from '../assets/dialog/name4.png';\nimport name5 from '../assets/dialog/name5.png';\nimport name6 from '../assets/dialog/name6.png';\n\nlet state = {\n  dialogPage: {\n    dialogs: [\n      { id: 1, name: \"name1\", avatarka: name1 },\n      { id: 2, name: \"name2\", avatarka: name2 },\n      { id: 3, name: \"name3\", avatarka: name3 },\n      { id: 4, name: \"name4\", avatarka: name4 },\n      { id: 5, name: \"name5\", avatarka: name5 },\n      { id: 6, name: \"name6\", avatarka: name6 },\n    ],\n    messages: [\n      { id: 1, userId: 777, message: \"hello\" },\n      { id: 2, userId: 445, message: \"how are you\" },\n      { id: 3, userId: 777, message: \"it is ok\" },\n      { id: 3, userId: 445, message: \"Good buy....\" },\n    ],\n  },\n  profilePage: {\n    posts: [\n      { id: 1, avatarka: avatarka, post: \"I'am ak and you\", likeCount: 3 },\n      { id: 2, avatarka: avatarka, post: \"How are you\", likeCount: 2 },\n      { id: 3, avatarka: avatarka, post: \"Do you happy\", likeCount: 5 },\n      { id: 4, avatarka: avatarka, post: \"I'm GOOD...\", likeCount: 6 },\n    ]\n  },\n\n}\n\nexport default state;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport state from './componet/redux/state'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={state}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}