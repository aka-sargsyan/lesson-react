{"version":3,"sources":["componet/assets/profile/avatarka.jpg","componet/users/pagination/PaginationStyle.module.css","componet/navbar/NavbarStyle.module.css","componet/profile/profileInformation/ProfileInformationStyle.module.css","componet/dialogs/DialogsStyle.module.css","componet/profile/ProfileStyle.module.css","componet/profile/my_posts/post/PostStyle.module.css","componet/dialogs/message/MessageStyle.module.css","componet/assets/profile/profile.jpg","componet/comman/preloader/PreloaderStyle.module.css","componet/assets/preloader/loader2.gif","componet/profile/my_posts/MyPostsStyle.module.css","componet/assets/dialog/name1.png","componet/assets/dialog/name2.png","componet/assets/dialog/name3.png","componet/assets/dialog/name4.png","componet/assets/dialog/name5.png","componet/assets/dialog/name6.png","componet/assets/users/user.png","componet/users/UsersStyle.module.css","componet/header/HeaderStyle.module.css","componet/assets/header/logo.png","componet/navbar/Navbar.jsx","componet/comman/preloader/Preloader.jsx","componet/profile/profileInformation/ProfileInformation.jsx","componet/profile/my_posts/post/Post.jsx","componet/profile/my_posts/MyPosts.jsx","componet/redux/profile-reduser.js","componet/profile/my_posts/MyPostsContainer.jsx","componet/profile/Profile.jsx","api/api.js","componet/profile/ProfileContainer.jsx","componet/redux/dialogs-reduser.js","componet/dialogs/dialog_item/DialogItem.jsx","componet/dialogs/message/Message.jsx","componet/dialogs/Dialogs.jsx","componet/dialogs/DialogsContainer.jsx","componet/redux/users-reduser.js","componet/users/User.jsx","componet/users/pagination/Pagination.jsx","componet/users/pagination/PaginationContainer.jsx","componet/users/Users.jsx","componet/users/UsersAPIComponent.jsx","componet/users/UsersContainer.jsx","componet/header/Header.jsx","componet/redux/auth-reduser.js","componet/header/HeaderContainer.jsx","App.js","serviceWorker.js","componet/redux/redux-store.js","index.js"],"names":["module","exports","navBarMenu","id","to","name","Navbar","className","styleCss","map","element","key","activeClassName","activeClass","visitedClass","Preloader","props","width","src","loaderImg","alt","ProfileInformation","profileInformation","widthImg","profileImg","user","photos","small","avatarka","fullName","contacts","obj","arr","keyObj","push","contactsElements","Post","p16","height","post","likeCount","MyPosts","posts","text","newPostText","postsElement","newPostElement","React","createRef","myPosts","ref","onChange","current","value","onPostCheang","cols","rows","onClick","onAddPost","initialState","addPost","state","stateCopy","length","updateNewPostText","profileReducer","action","type","dispatchObject","MyPostsContainer","connect","profilePage","Profile","app_wraper_content","instance","axius","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","delete","authAPI","ProfileContainer","setUserProfile","this","Component","newMessageText","dialogs","name1","name2","name3","name4","name5","name6","messages","message","updateNewMessageText","addMessage","dialogReduser","DialogItem","path","Message","textAlignRight","textAlignLeft","Dialogs","dialogsPage","dialogsElement","dialog","messagesElement","dialogItem","placeholder","currentTarget","onMessageCheang","onSendMessage","DialogsContainer","dialogPage","users","clickedButton","clickUserId","isFetching","followingInProgress","startPage","endPage","countPage","userCountPage","totalCount","pages","setUsers","setIsFetching","boolean","addPages","i","usersReduser","followed","totalUsers","User","smoll","userFoto","status","buttonName","innerText","setClickedButton","resultCode","deleteFollow","addFollow","disabled","Pagination","setCurrentPage","page","items","clickPage","event","setStartPage","setEndPage","setPages","Number","pagination","index","notAllowed","active","notActive","setCountPage","PaginationContainer","usersPage","Users","UsersAPIComponent","UsersContainer","Header","header","logo","isAuthFetching","login","email","authReducer","HeaderContainer","setUserData","auth","App","ProfileRender","exact","render","Boolean","window","location","hostname","match","redusers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c9253ace.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatarka.4db376fa.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PaginationStyle_pagination__3KjPo\",\"active\":\"PaginationStyle_active__221M-\",\"notActive\":\"PaginationStyle_notActive__1D8Pb\",\"notAllowed\":\"PaginationStyle_notAllowed__25-qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"NavbarStyle_Navbar__1oSGK\",\"textDecorationNone\":\"NavbarStyle_textDecorationNone__axyB9\",\"activeClass\":\"NavbarStyle_activeClass__3YL-g\",\"visitedClass\":\"NavbarStyle_visitedClass__27zdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widthImg\":\"ProfileInformationStyle_widthImg__1A0CT\",\"contacts\":\"ProfileInformationStyle_contacts__3RyPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogsStyle_dialogs__38M-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widthImg\":\"ProfileStyle_widthImg__2_zMQ\",\"p16\":\"ProfileStyle_p16__39Rh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p16\":\"PostStyle_p16__3IQIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAlignLeft\":\"MessageStyle_textAlignLeft__1QG4K\",\"textAlignRight\":\"MessageStyle_textAlignRight__x8RKM\"};","module.exports = __webpack_public_path__ + \"static/media/profile.01723588.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width\":\"PreloaderStyle_width__YqOdq\"};","module.exports = __webpack_public_path__ + \"static/media/loader2.7daab030.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p16\":\"MyPostsStyle_p16__cLOVn\"};","module.exports = __webpack_public_path__ + \"static/media/name1.6d5980cf.png\";","module.exports = __webpack_public_path__ + \"static/media/name2.3be9eee2.png\";","module.exports = __webpack_public_path__ + \"static/media/name3.28d0feff.png\";","module.exports = __webpack_public_path__ + \"static/media/name4.4f701104.png\";","module.exports = __webpack_public_path__ + \"static/media/name5.1d78c416.png\";","module.exports = __webpack_public_path__ + \"static/media/name6.c1a07ddb.png\";","module.exports = __webpack_public_path__ + \"static/media/user.7cc7a630.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width\":\"UsersStyle_width__HEcuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderStyle_header__1Gr8X\"};","module.exports = __webpack_public_path__ + \"static/media/logo.80c19cf7.png\";","import React from 'react';\nimport styleCss from './NavbarStyle.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst navBarMenu = [\n  { id: 1, to: 'profile', name: 'Profile' },\n  { id: 2, to: 'dialogs', name: 'Dialogs' },\n  { id: 3, to: 'news', name: 'News' },\n  { id: 4, to: 'music', name: 'Music' },\n  { id: 5, to: 'settings', name: 'Settings' },\n  { id: 6, to: 'users', name: 'Users' }\n]\n\nconst Navbar = () => {\n  return (\n    <div className={styleCss.Navbar}>\n      <div>\n        {navBarMenu.map((element) => (\n          <div key={element.id}>\n            <NavLink to={`/${element.to}`} activeClassName={styleCss.activeClass} className={`${styleCss.visitedClass} textDecorationNone`}>{element.name}</NavLink>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n\n","import React from 'react';\nimport styleCss from './PreloaderStyle.module.css'\nimport loaderImg from '../../assets/preloader/loader2.gif'\nconst Preloader = (props) => {\n  return (\n    <div>\n     <img className={styleCss.width} src={loaderImg} alt=\"\" />\n    </div>\n  )\n}\n\nexport default Preloader;","import React from 'react';\nimport styleCss from './ProfileInformationStyle.module.css';\nimport profileImg from '../../assets/profile/profile.jpg';\nimport avatarka from '../../assets/profile/avatarka.jpg'\nimport Preloader from '../../comman/preloader/Preloader';\n\nconst ProfileInformation = (props) => {\n\n  let contactsElements = () => {\n    let obj = props.user.contacts;\n    let arr = [];\n    for (let keyObj in obj) {\n      arr.push(\n        <tr key={keyObj}>\n          <td>{keyObj}</td>\n          <td>{obj[keyObj] ? obj[keyObj] : \"haven't information\"}</td>\n        </tr>\n      )\n    }\n    return arr;\n  }\n  return (\n    <div className={styleCss.profileInformation}>\n      <div className={styleCss.widthImg}>\n        <img src={profileImg} alt=\"\" />\n      </div>\n      {props.user ?\n        <div className=\"mt10 mb10\">\n          <div className=\"displayFlex alinItemsEnd\">\n            <div>\n              <img src={props.user.photos.small ? props.user.photos.small : avatarka} alt=\"\" width=\"60\" />\n            </div>\n            <div className=\"ml10\">\n              <span>{props.user.fullName}</span>\n            </div>\n\n          </div>\n          <div>\n            <table className={styleCss.contacts}>\n              <tbody>\n                {contactsElements()}\n              </tbody>\n            </table>\n          </div>\n        </div> :\n        <Preloader />\n      }\n    </div>\n  )\n}\n\nexport default ProfileInformation;","import React from 'react';\nimport styleCss from './PostStyle.module.css';\n\n\nconst Post = (props) => {\n  return (\n    <div className={styleCss.Post} key={props.id}>\n      <div className={styleCss.p16}>\n        <img src={props.avatarka} alt=\"\" width=\"60\" height=\"60\" />\n        <span>{props.post}</span>\n        <div>\n          <span>Like</span>\n          <span>{props.likeCount}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport styleCss from './MyPostsStyle.module.css';\nimport Post from './post/Post';\n\nconst MyPosts = (props) => {\n\n  let posts = props.posts;\n  let text = props.newPostText;\n  let postsElement = posts.map(post => <Post avatarka={post.avatarka} post={post.post} likeCount={post.likeCount} key={post.id} />);\n  let newPostElement = React.createRef();\n\n  let addPost = () => {\n    let text = newPostElement.current.value;\n    props.onAddPost(text);\n  }\n\n  let onPostCheang = () => {\n    let text = newPostElement.current.value;\n    props.onPostCheang(text)\n  }\n\n  return (\n    <div className={styleCss.myPosts}>\n      <div>\n        <p className=\"m0\">My posts</p>\n        <textarea ref={newPostElement} onChange={onPostCheang} value={text} name=\"\" cols=\"30\" rows=\"1\"></textarea>\n        <div>\n          <button onClick={addPost}>Add post</button>\n        </div>\n      </div>\n      {postsElement}\n    </div>\n  )\n}\n\nexport default MyPosts;","import avatarka from '../assets/profile/avatarka.jpg';\n\n\nconst ADD_POST = \"ADD_POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE_NEW_POST_TEXT\";\nconst ADD_USER_PROFILE = \"ADD_USER_PROFILE\";\n\nlet initialState = {\n  newPostText: \"Coins\",\n  posts: [\n    { id: 1, avatarka: avatarka, post: \"I'am ak and you\", likeCount: 3 },\n    { id: 2, avatarka: avatarka, post: \"How are you\", likeCount: 2 },\n    { id: 3, avatarka: avatarka, post: \"Do you happy\", likeCount: 5 },\n    { id: 4, avatarka: avatarka, post: \"I'm GOOD...\", likeCount: 6 },\n  ],\n  user: null,\n};\n\nlet addPost = (state, text) => {\n  let stateCopy = { ...state };\n  stateCopy.posts = [...state.posts];\n  let id = stateCopy.posts.length + 1\n  stateCopy.posts.push({ id, avatarka, post: text, likeCount: 0 });\n  stateCopy.newPostText = \"\";\n  return stateCopy\n}\n\nlet updateNewPostText = (state, text) => {\n  return { ...state, newPostText: text }\n}\n\nexport let onAddPost = (text) => ({ type: ADD_POST, text });\nexport let onPostCheang = (text) => ({ type: UPDATE_NEW_POST_TEXT, text });\nexport let setUserProfile = (user) => ({ type: ADD_USER_PROFILE, user });\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NEW_POST_TEXT:\n      return updateNewPostText(state, action.text);\n\n    case ADD_POST:\n      return addPost(state, action.text);\n\n    case ADD_USER_PROFILE:\n      return { ...state, user: action.user }\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer\n","import MyPosts from './MyPosts';\nimport { onAddPost, onPostCheang } from '../../redux/profile-reduser';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return { posts: state.profilePage.posts, newPostText: state.profilePage.newPostText }\n};\n\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     onAddPost: (text) => dispatch(addPostCreator(text)),\n//     onPostCheang: (text) => dispatch(updateNewPostTextCreator(text))\n//   }\n// }\n\nlet dispatchObject = {\n  onAddPost,\n  onPostCheang\n}\n\nconst MyPostsContainer = connect(mapStateToProps, dispatchObject)(MyPosts)\n\nexport default MyPostsContainer;\n\n","import React from 'react';\nimport styleCss from './ProfileStyle.module.css';\nimport ProfileInformation from './profileInformation/ProfileInformation';\nimport MyPostsContainer from './my_posts/MyPostsContainer';\n\nconst Profile = (props) => {\n  return (\n    <div className={styleCss.Profile}>\n      <div className={styleCss.app_wraper_content}>\n        <ProfileInformation user={props.user}/>\n        <MyPostsContainer />\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;","import * as axius from 'axios';\n\nconst instance = axius.create({\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  withCredentials: true,\n  headers: { 'API-KEY': \"2e35f25e-594b-44da-bc65-97b49b0658fb\" }\n})\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`,).\n      then(response => response.data);\n  },\n\n  follow(userId = null) {\n    return instance.post(`follow/${userId}`).then(response => response.data)\n  },\n\n  unfollow(userId = null) {\n    return instance.delete(`follow/${userId}`).then(response => response.data)\n  },\n\n  profileUserId(userId = 2) {\n    return instance.get(`profile/${userId}`)\n  }\n}\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`).then(response => response)\n  }\n}\n\n\n// axius.post(`https://social-network.samuraijs.com/api/1.0/follow/${props.user.id}`, {}, { withCredentials: true, headers: { 'API-KEY': \"2e35f25e-594b-44da-bc65-97b49b0658fb\" } }).\n// then(response => {\n//   if (response.data.resultCode == 0) {\n//     props.setClickedButton(false, null);\n//     props.addFollow(props.user.id);\n\n//   }\n// }\n// );\n// }","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\n// import * as axius from 'axios';\nimport { setUserProfile } from '../redux/profile-reduser';\nimport { usersAPI } from '../../api/api';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    usersAPI.profileUserId().then(response => {\n      this.props.setUserProfile(response.data);\n    }\n    );\n  }\n\n  render() {\n    return (\n      <Profile {... this.props} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    user: state.profilePage.user,\n  }\n}\n\nlet dispatchObject = {\n  setUserProfile\n}\n\nexport default connect(mapStateToProps, dispatchObject)(ProfileContainer);","import name1 from '../assets/dialog/name1.png';\nimport name2 from '../assets/dialog/name2.png';\nimport name3 from '../assets/dialog/name3.png';\nimport name4 from '../assets/dialog/name4.png';\nimport name5 from '../assets/dialog/name5.png';\nimport name6 from '../assets/dialog/name6.png';\n\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\n\nlet initialState = {\n  newMessageText: \"\",\n  dialogs: [\n    { id: 1, name: \"name1\", avatarka: name1 },\n    { id: 2, name: \"name2\", avatarka: name2 },\n    { id: 3, name: \"name3\", avatarka: name3 },\n    { id: 4, name: \"name4\", avatarka: name4 },\n    { id: 5, name: \"name5\", avatarka: name5 },\n    { id: 6, name: \"name6\", avatarka: name6 },\n  ],\n  messages: [\n    { id: 1, userId: 777, message: \"hello\" },\n    { id: 2, userId: 445, message: \"how are you\" },\n    { id: 3, userId: 777, message: \"it is ok\" },\n    { id: 4, userId: 445, message: \"Good buy....\" },\n  ],\n}\n\nlet updateNewMessageText = (state, text) => {\n  return { ...state, newMessageText: text }\n}\n\nlet addMessage = (state, text) => {\n  if (text === \"\") {\n    return state;\n  } else {\n    let stateCopy = { ...state,newMessageText: \"\" };\n    let id = state.messages.length + 1;\n    stateCopy.messages = [...state.messages, { id, userId: 777, message: text }]\n    return stateCopy\n  }\n}\n\nexport let onMessageCheang = (text) => ({ type: UPDATE_NEW_MESSAGE_TEXT, text });\nexport let onSendMessage = (text) => ({ type: ADD_MESSAGE, text });\n\nconst dialogReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return updateNewMessageText(state, action.text);;\n\n    case ADD_MESSAGE:\n      return addMessage(state, action.text);;\n\n    default:\n      return state;\n  }\n}\n\nexport default dialogReduser;","import React from 'react';\nimport styleCss from './DialogItemStyle.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n\n  let path = '/dialogs/' + props.id;\n  let name = props.name;\n\n  return (\n    <div>\n      <img src={props.avatarka} alt=\"\" width=\"50\"/>\n      <NavLink to={path} className={`textDecorationNone`}>{name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport styleCss from './MessageStyle.module.css';\n\nconst Message = (props) => {\n\n  return (\n    <div className={props.userId === 777 ? styleCss.textAlignRight : styleCss.textAlignLeft}>\n      <span >{props.message}</span>\n    </div>\n  )\n}\n\nexport default Message;","import React from 'react';\nimport styleCss from './DialogsStyle.module.css';\nimport DialogItem from './dialog_item/DialogItem';\nimport Message from './message/Message';\n\nconst Dialogs = (props) => {\n  \n  let dialogs = props.dialogsPage.dialogs\n  let messages = props.dialogsPage.messages;\n  let dialogsElement = dialogs.map(dialog => <DialogItem id={dialog.id} name={dialog.name} avatarka={dialog.avatarka} key={dialog.id} />);\n  let messagesElement = messages.map(message => <Message id={message.id} message={message.message} userId={message.userId} key={message.id} />);\n  let text = props.dialogsPage.newMessageText;\n\n  let sendMessage = () => {\n    props.onSendMessage(text)\n  }\n\n  let messageCheang = (element) => {\n    let text = element.currentTarget.value;\n    props.onMessageCheang(text)\n  }\n\n  return (\n    <div className={styleCss.dialogs}>\n      <div className={styleCss.dialogItem}>\n        {dialogsElement}\n      </div>\n      <div className={styleCss.messages}>\n        {messagesElement}\n        <div className=\"pt10\">\n          <textarea  placeholder=\"enter youre message\" onChange={messageCheang} value={text} cols=\"30\" rows=\"1\"></textarea>\n          <button onClick={sendMessage}>send message</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs;","import { onSendMessage, onMessageCheang } from '../redux/dialogs-reduser';\nimport {connect} from 'react-redux'\nimport Dialogs from './Dialogs';\n\n\n// const DialogsContainer = (props) => {\n\n//   let onSendMessage = (text) => {\n//     props.store.dispatch(addMessageCreator(text))\n//   }\n\n//   let onMessageCheang = (text) => {\n//     props.store.dispatch(updateNewMessageTextCreator(text))\n//   }\n\n//   return (\n//     < Dialogs dialogsPage={props.store.getState().dialogPage}\n//       // dispatch={props.store.dispatch.bind(props.store)} \n//       onSendMessage={onSendMessage}\n//       onMessageCheang={onMessageCheang} />\n//   )\n// }\n\nlet mapStatetoProps = (state) => {\n  return {\n    dialogsPage: state.dialogPage\n  }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     onSendMessage: (text) => dispatch(addMessageCreator(text)),\n//     onMessageCheang: (text) => dispatch(updateNewMessageTextCreator(text))\n//   }\n// }\n\nlet dispatchObject = {\n  onSendMessage,\n  onMessageCheang\n}\n\nconst DialogsContainer = connect(mapStatetoProps,dispatchObject)(Dialogs);\n\nexport default DialogsContainer;\n\n","const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\nconst SET_CLICKED_BUTTON = \"SET_CLICKED_BUTTON\";\n\n// pagination action type start\nconst START_PAGE = \"START_PAGE\";\nconst END_PAGE = \"END_PAGE\";\nconst COUNT_PAGE = \"COUNT_PAGE\";\nconst PAGES = \"PAGES\";\nconst CURRENT_PAGE = \"CURRENT_PAGE\";\n// pagination action type end\n\nlet initialState = {\n  users: [],\n  clickedButton: false,\n  clickUserId: null,\n  isFetching: true,\n\n  followingInProgress: [],\n\n  startPage: 0,\n  endPage: 0,\n  countPage: 0,\n  currentPage: 1,\n  userCountPage: 10,\n  totalCount: 0,\n  pages: [],\n\n}\n\nexport let addFollow = (userId) => ({ type: FOLLOW, userId });\nexport let deleteFollow = (userId) => ({ type: UNFOLLOW, userId });\nexport let setUsers = (users) => ({ type: SET_USERS, users });\nexport let setIsFetching = (boolean) => ({ type: SET_IS_FETCHING, boolean });\nexport let setClickedButton = (boolean, userId) => ({ type: SET_CLICKED_BUTTON, boolean, userId });\n\n// pagination action creator start\nexport let setUsersTotalCount = (totalUsers) => ({ type: SET_USERS_TOTAL_COUNT, totalUsers });\nexport let setStartPage = (startPage) => ({ type: START_PAGE, startPage });\nexport let setEndPage = (endPage) => ({ type: END_PAGE, endPage });\nexport let setCountPage = (countPage) => ({ type: COUNT_PAGE, countPage });\nexport let setPages = (startPage, endPage) => ({ type: PAGES, startPage, endPage });\nexport let setCurrentPage = (currentPage) => ({ type: CURRENT_PAGE, currentPage });\n// pagination action creator end\n\nlet addPages = (startPage, endPage) => {\n  let pages = [];\n  for (let i = startPage; i <= endPage; i++) {\n    if (i === startPage) {\n      pages.push(\"«\");\n      pages.push(i);\n    } else if (i === endPage) {\n      pages.push(i);\n      pages.push(\"»\");\n    } else {\n      pages.push(i);\n    }\n  }\n  return pages;\n}\n\nconst usersReduser = (state = initialState, action) => {\n  switch (action.type) {\n\n    case FOLLOW:\n      return {\n        ...state, users: state.users.map(user => {\n          if (user.id === action.userId) {\n            user.followed = true;\n            return user;\n          } else {\n            return user;\n          }\n        })\n      }\n\n    case UNFOLLOW:\n      return {\n        ...state, users: state.users.map(user => {\n          if (user.id === action.userId) {\n            user.followed = false;\n            return user;\n          } else {\n            return user;\n          }\n        })\n      }\n    case SET_USERS:\n      return { ...state, users: action.users }\n\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.current }\n\n\n    case SET_IS_FETCHING:\n      return { ...state, isFetching: action.boolean }\n\n    case SET_CLICKED_BUTTON:\n      return { ...state, clickedButton: action.boolean, clickUserId: action.userId }\n\n    // start pagination\n    case SET_USERS_TOTAL_COUNT:\n      return { ...state, totalCount: action.totalUsers }\n\n    case START_PAGE:\n      return { ...state, startPage: action.startPage }\n\n    case END_PAGE:\n      return { ...state, endPage: action.endPage }\n\n    case COUNT_PAGE:\n      return { ...state, countPage: action.countPage }\n\n    case PAGES:\n      return { ...state, pages: addPages(action.startPage, action.endPage) }\n\n    case CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage }\n    // end pagination\n\n    default: return state\n  }\n}\n\nexport default usersReduser;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport userFoto from '../assets/users/user.png';\nimport styleCss from './UsersStyle.module.css'\nimport { usersAPI } from '../../api/api';\nconst User = (props) => {\n\n  let addDeleteUser = (element) => {\n    let buttonName = element.currentTarget.innerText;\n    if (buttonName === \"Follow\") {\n      props.setClickedButton(true, props.user.id);\n      usersAPI.unfollow(props.user.id).then(response => {\n          if (response.resultCode == 0) {\n            props.setClickedButton(false, null);\n            props.deleteFollow(props.user.id);\n\n          }\n        }\n        );\n    } else if (buttonName === \"Unfollow\") {\n      props.setClickedButton(true, props.user.id);\n        usersAPI.follow(props.user.id).then(response => {\n          if (response.resultCode == 0) {\n            props.setClickedButton(false, null);\n            props.addFollow(props.user.id);\n\n          }\n        }\n        );\n    }\n  }\n\n\n  return (\n    <div className={styleCss.width}>\n      <div className={\"displayFlex\"}>\n        <NavLink to={`/profile/${props.user.id}`} className='textDecorationNone' >\n          <div>\n            <img src={props.user.photos.smoll ? props.user.photos.smoll : userFoto} alt=\"\" width='40' />\n          </div>\n          <div className={\"ml10 displayFlex alinItemsCenter\"}>\n            <span >{props.user.name}</span>\n          </div>\n        </NavLink>\n      </div>\n      <div className={\"displayFlex justifyContentBetween\"}>\n        <div className=\"\">\n          <span>{props.user.status ? \"status\" : \"don't have state\"}</span>\n          {props.user.status ? <span>{props.user.status}</span> : \"\"}\n        </div>\n        <div>\n          <button onClick={addDeleteUser} disabled={props.user.id === props.clickUserId ? true : false}>{props.user.followed ? \"Follow\" : \"Unfollow\"}</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default User;","import React from 'react';\nimport styleCss from './PaginationStyle.module.css';\nimport { usersAPI } from '../../../api/api';\n\nclass Pagination extends React.Component {\n  componentDidMount() {\n    this.props.setStartPage(1);\n    this.props.setEndPage(10);\n    this.props.setPages(1, 10);\n  }\n\n  setCurrentPage = (page) => {\n    this.props.setIsFetching(false);\n    usersAPI.getUsers(page,this.props.userCountPage).then(response => {\n          this.props.setIsFetching(true);\n          this.props.setUsers(response.items)\n        });\n  }\n\n  clickPage = (event) => {\n    let value = event.currentTarget.innerText;\n\n    if (value === \"«\") {\n      let currentPage = this.props.currentPage;\n      let startPage = this.props.startPage - 1;\n      let endPage = startPage + 9;\n      this.props.setStartPage(startPage);\n      this.props.setEndPage(endPage);\n      this.props.setPages(startPage, endPage);\n      if (currentPage > endPage) {\n        this.props.setCurrentPage(Number(endPage));\n        this.setCurrentPage(Number(endPage));\n      }\n    } else if (value === \"»\") {\n      let currentPage = this.props.currentPage;\n      let endPage = this.props.endPage + 1;\n      let startPage = endPage - 9;\n      this.props.setStartPage(startPage);\n      this.props.setEndPage(endPage);\n      this.props.setPages(startPage, endPage);\n      if (currentPage < startPage) {\n        this.props.setCurrentPage(Number(startPage));\n        this.setCurrentPage(Number(startPage));\n      }\n    } else {\n      this.props.setCurrentPage(Number(value));\n      this.setCurrentPage(Number(value));\n    }\n  }\n  render() {\n    return (\n      <div className={styleCss.pagination}>\n        <ul >\n          {this.props.pages.map((page, index) => <li key={index}>\n            {(page === \"«\" & this.props.startPage === 1) || (page === \"»\" & this.props.endPage === this.props.countPage) ?\n              <button disabled className={styleCss.notAllowed}>{page}</button>\n              : <button className={page === this.props.currentPage ? styleCss.active : styleCss.notActive} onClick={this.clickPage}>{page}</button>}\n          </li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Pagination;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {  setStartPage, setEndPage, setCountPage, setPages, setCurrentPage, setUsers, setIsFetching } from '../../redux/users-reduser';\nimport Pagination from './Pagination';\n\nlet mapStateToProps = (state) => {\n  return ({\n    startPage: state.usersPage.startPage,\n    endPage: state.usersPage.endPage,\n    countPage: state.usersPage.countPage,\n    pages: state.usersPage.pages,\n    currentPage: state.usersPage.currentPage,\n    userCountPage: state.usersPage.userCountPage,\n    totalCount: state.usersPage.totalCount\n  })\n}\n\n// let dispatchStateToProps = (dispatch) => {\n//   return {\n//     setStartPage: (startPage) => dispatch(setStartPageCreator(startPage)),\n//     setEndPage: (endPage) => dispatch(setEndPageCreator(endPage)),\n//     setCountPage: (countPage) => dispatch(setCountPageCreator(countPage)),\n//     setPages: (startPage,endPage) => dispatch(setPagesCreator(startPage,endPage)),\n//     setCurrentPage: (currentPage) => dispatch(setCurrentPageCreator(currentPage)),\n//     setUsers: (users) => dispatch(setUsersCreator(users)),\n//     setIsFetching: (boolean) => dispatch(setIsFetchingCreator(boolean)),\n//   }\n// }\n\nlet dispatchObject = {\n  setStartPage,\n  setEndPage,\n  setCountPage,\n  setPages,\n  setCurrentPage,\n  setUsers,\n  setIsFetching\n}\nlet PaginationContainer = connect(mapStateToProps, dispatchObject)(Pagination)\n\nexport default PaginationContainer;","import React from 'react';\nimport User from './User';\nimport Preloader from '../comman/preloader/Preloader';\nimport PaginationContainer from './pagination/PaginationContainer';\n\nconst Users = (props) => {\n  return (\n    <div>\n      {props.isFetching === true ? null : <Preloader />}\n      <div>\n        <PaginationContainer />\n      </div>\n      {props.users.map(user => <User key={user.id} user={user} addFollow={props.addFollow} deleteFollow={props.deleteFollow}\n                                     setClickedButton={props.setClickedButton} clickedButton={props.clickedButton}\n                                     clickUserId={props.clickUserId} />)}\n      <PaginationContainer />\n    </div>\n  )\n}\n\n\nexport default Users;","import React from 'react';\nimport Users from './Users';\nimport { usersAPI } from '../../api/api';\n\nclass UsersAPIComponent extends React.Component {\n\n  componentDidMount() {\n    usersAPI.getUsers(this.props.currentPage, this.props.userCountPage).then(response => {\n      this.props.setIsFetching(true);\n      this.props.setUsers(response.items);\n    }\n    )\n  }\n\n  render() {\n    return <Users /*totalCount={this.props.totalCount}*/ users={this.props.usersPage.users}\n      addFollow={this.props.addFollow} deleteFollow={this.props.deleteFollow}\n      isFetching={this.props.isFetching} setClickedButton={this.props.setClickedButton}\n      clickedButton={this.props.clickedButton} clickUserId={this.props.clickUserId} />\n  }\n}\n\nexport default UsersAPIComponent;","import { connect } from 'react-redux';\nimport { addFollow, deleteFollow, setUsers, setIsFetching, setClickedButton } from '../redux/users-reduser';\nimport UsersAPIComponent from './UsersAPIComponent';\n\n\nlet mapStateToProps = (state) => {\n  return ({\n    usersPage: state.usersPage,\n    isFetching: state.usersPage.isFetching,\n    clickedButton: state.usersPage.clickedButton,\n    clickUserId: state.usersPage.clickUserId,\n    currentPage: state.usersPage.currentPage,\n    userCountPage: state.usersPage.userCountPage\n  })\n}\n\n// let dispatchStateToProps = (dispatch) => {\n//   return {\n//     addFollow: (userId) => dispatch(followSuccessCreator(userId)),\n//     deleteFollow: (userId) => dispatch(unFollowSuccessCreator(userId)),\n//     setUsers: (users) => dispatch(setUsersCreator(users)),\n//     setUsersTotalCount: (totalUsers) => dispatch(setUsersTotalCountCreator(totalUsers)),\n//     setCurrentPage: (current) => dispatch(setCurrentPageCreator(current)),\n//     setIsFetching: (boolean) => dispatch(setIsFetchingCreator(boolean)),\n//   }\n// }\n\nlet dispatchObject = {\n  addFollow,\n  deleteFollow,\n  setUsers,\n  setIsFetching,\n  setClickedButton\n}\n\nlet UsersContainer = connect(mapStateToProps, dispatchObject)(UsersAPIComponent)\n\nexport default UsersContainer;","import React from 'react';\nimport styleCss from './HeaderStyle.module.css'\nimport logo from '../assets/header/logo.png'\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n\n  return (\n    <div className={`${styleCss.header} displayFlex justifyContentBetween`}>\n      <NavLink to=\"/profile\">\n        <img src={logo} alt=\"\" width=\"70\" />\n      </NavLink>\n      <div>\n        {props.isAuthFetching ?\n          <div>{props.login}</div> :\n          <NavLink to=\"/login\" className=\"textDecorationNone\">login</NavLink>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Header;","\nconst SET_USER_DATA = \"SET_USER_DATA\";\n\nlet initialState = {\n  userId: null,\n  login: null,\n  email: null,\n  isAuthFetching: false\n};\n\nexport let setUserData = (userId, login, email) => ({ type: SET_USER_DATA, data: { userId, login, email } });\n\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state, ...action.data, isAuthFetching: true }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer\n","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport {setUserData} from '../redux/auth-reduser'\nimport { authAPI } from '../../api/api';\nclass HeaderContainer extends React.Component {\n\n  componentDidMount() {\n\n      authAPI.me().then(response => {\n        let {id,login,email} = response.data.data\n        if(response.data.resultCode === 0){\n          this.props.setUserData(id,login,email)\n        }\n\n      }\n      );\n  }\n\n  render() {\n    return <Header {...this.props} />\n  }\n}\n\nlet mapStatToProps = (state) => {\n  return {\n    userId: state.auth.id,\n    login: state.auth.login,\n    email: state.auth.email,\n    isAuthFetching: state.auth.isAuthFetching\n  }\n}\n\nlet dispatchObject = {\n  setUserData\n}\nexport default connect(mapStatToProps,dispatchObject)(HeaderContainer);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './componet/navbar/Navbar';\nimport ProfileContainer from './componet/profile/ProfileContainer';\nimport DialogsContainer from './componet/dialogs/DialogsContainer';\nimport UsersContainer from './componet/users/UsersContainer';\nimport HeaderContainer from './componet/header/HeaderContainer';\n\nfunction App(props) {\n\n  let DialogsRender = () => <DialogsContainer  />;\n  let ProfileRender = () => <ProfileContainer />\n  let UserseRender = () => <UsersContainer />\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app_wraper_content\">\n          <Route path='/' exact render={ProfileRender} />\n          <Route path='/profile' render={ProfileRender} />\n          <Route path='/dialogs' render={DialogsRender} />\n          <Route path='/users' render={UserseRender} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore } from \"redux\";\nimport authReducer from \"./auth-reduser\";\nimport dialogReduser from \"./dialogs-reduser\";\nimport profileReducer from \"./profile-reduser\";\nimport usersReduser from \"./users-reduser\";\n\nlet redusers = combineReducers({\n  profilePage: profileReducer,\n  dialogPage: dialogReduser,\n  usersPage: usersReduser,\n  auth: authReducer\n});\n\nlet store = createStore(redusers);\n\nexport default store;\n\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './componet/redux/redux-store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n// let rerenderEntireTree = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n// }\n\n// rerenderEntireTree();\n\n// store.subscribe(() => {\n//   rerenderEntireTree()\n// }\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}